package joukkuerekisteri.test;
// Generated by ComTest BEGIN
import java.util.*;
import joukkuerekisteri.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.08.05 13:26:36 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PelaajatTest {



  // Generated by ComTest BEGIN
  /** testLisaa37 */
  @Test
  public void testLisaa37() {    // Pelaajat: 37
    Pelaajat pelaajat = new Pelaajat(); 
    Pelaaja p1 = new Pelaaja(), p2 = new Pelaaja(); 
    assertEquals("From: Pelaajat line: 42", 0, pelaajat.getLkm()); 
    pelaajat.lisaa(p1); assertEquals("From: Pelaajat line: 43", 1, pelaajat.getLkm()); 
    pelaajat.lisaa(p2); assertEquals("From: Pelaajat line: 44", 2, pelaajat.getLkm()); 
    pelaajat.lisaa(p1); assertEquals("From: Pelaajat line: 45", 3, pelaajat.getLkm()); 
    Iterator<Pelaaja> it = pelaajat.iterator(); 
    assertEquals("From: Pelaajat line: 47", p1, it.next()); 
    assertEquals("From: Pelaajat line: 48", p2, it.next()); 
    assertEquals("From: Pelaajat line: 49", p1, it.next()); 
    pelaajat.lisaa(p1); assertEquals("From: Pelaajat line: 50", 4, pelaajat.getLkm()); 
    pelaajat.lisaa(p1); assertEquals("From: Pelaajat line: 51", 5, pelaajat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa64 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa64() throws SailoException,CloneNotSupportedException {    // Pelaajat: 64
    Pelaajat pelaajat = new Pelaajat(); 
    Pelaaja p1 = new Pelaaja(), p2 = new Pelaaja(); 
    p1.rekisteroi(); p2.rekisteroi(); 
    assertEquals("From: Pelaajat line: 70", 0, pelaajat.getLkm()); 
    pelaajat.korvaaTaiLisaa(p1); assertEquals("From: Pelaajat line: 71", 1, pelaajat.getLkm()); 
    pelaajat.korvaaTaiLisaa(p2); assertEquals("From: Pelaajat line: 72", 2, pelaajat.getLkm()); 
    Pelaaja p3 = p1.clone(); 
    pelaajat.korvaaTaiLisaa(p3); assertEquals("From: Pelaajat line: 74", 2, pelaajat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaJoukkueenPelaajat95 
   * @throws SailoException when error
   */
  @Test
  public void testPoistaJoukkueenPelaajat95() throws SailoException {    // Pelaajat: 95
    Pelaajat pelaajat = new Pelaajat(); 
    Pelaaja p1 = new Pelaaja(), p2 = new Pelaaja(), p3 = new Pelaaja(); 
    p1.rekisteroi(); p2.rekisteroi(); p3.rekisteroi(); 
    p1.setJoukkueenro(1); p2.setJoukkueenro(1); p3.setJoukkueenro(1); 
    pelaajat.lisaa(p1); pelaajat.lisaa(p2); pelaajat.lisaa(p3); 
    assertEquals("From: Pelaajat line: 102", 3, pelaajat.getLkm()); 
    pelaajat.poistaJoukkueenPelaajat(1); assertEquals("From: Pelaajat line: 103", 0, pelaajat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista125 
   * @throws SailoException when error
   */
  @Test
  public void testPoista125() throws SailoException {    // Pelaajat: 125
    Pelaajat pelaajat = new Pelaajat(); 
    Pelaaja p1 = new Pelaaja(), p2 = new Pelaaja(), p3 = new Pelaaja(); 
    p1.rekisteroi(); p2.rekisteroi(); p3.rekisteroi(); 
    int id1 = p1.getTunnusNro(); 
    pelaajat.lisaa(p1); pelaajat.lisaa(p2); pelaajat.lisaa(p3); 
    assertEquals("From: Pelaajat line: 132", 3, pelaajat.getLkm()); 
    pelaajat.poista(id1); assertEquals("From: Pelaajat line: 133", 2, pelaajat.getLkm()); 
    pelaajat.poista(id1+3); assertEquals("From: Pelaajat line: 134", 2, pelaajat.getLkm()); 
  } // Generated by ComTest END
}