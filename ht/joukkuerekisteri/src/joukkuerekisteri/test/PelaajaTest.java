package joukkuerekisteri.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import joukkuerekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.08.05 13:26:30 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PelaajaTest {



  // Generated by ComTest BEGIN
  /** testRekisteroi73 */
  @Test
  public void testRekisteroi73() {    // Pelaaja: 73
    Pelaaja p1 = new Pelaaja(); 
    assertEquals("From: Pelaaja line: 75", 0, p1.getTunnusNro()); 
    p1.rekisteroi(); 
    Pelaaja p2 = new Pelaaja(); 
    p2.rekisteroi(); 
    int n1 = p1.getTunnusNro(); 
    int n2 = p2.getTunnusNro(); 
    assertEquals("From: Pelaaja line: 81", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetIka176 */
  @Test
  public void testGetIka176() {    // Pelaaja: 176
    Pelaaja p1 = new Pelaaja(); 
    p1.setSyntyma("01:01:2000"); 
    assertEquals("From: Pelaaja line: 179", "01:01:2000", p1.getSyntyma()); 
    assertEquals("From: Pelaaja line: 180", 20, p1.getIka()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString288 */
  @Test
  public void testToString288() {    // Pelaaja: 288
    Pelaaja pelaaja = new Pelaaja(); 
    pelaaja.parse("   1   |  2  |   Erkki Esimerkki  | 01:01:2000 | suomalainen | 23 | Puolustaja | 180.0 | 80.0 "); 
    assertEquals("From: Pelaaja line: 291", "1|2|Erkki Esimerkki|01:01:2000|suomalainen|23|Puolustaja|180.0|80.0", pelaaja.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse305 */
  @Test
  public void testParse305() {    // Pelaaja: 305
    Pelaaja pelaaja = new Pelaaja(); 
    pelaaja.parse("   1   |  2  |   Erkki Esimerkki  | 01:01:2000 | suomalainen | 23 | Puolustaja | 180.0 | 80.0 "); 
    assertEquals("From: Pelaaja line: 308", "1|2|Erkki Esimerkki|01:01:2000|suomalainen|23|Puolustaja|180.0|80.0", pelaaja.toString()); 
    pelaaja.rekisteroi(); 
    int n = pelaaja.getTunnusNro(); 
    pelaaja.parse(""+(n+20)); 
    pelaaja.rekisteroi(); 
    assertEquals("From: Pelaaja line: 314", n+20+1, pelaaja.getTunnusNro()); 
    assertEquals("From: Pelaaja line: 315", "" + (n+20+1) + "|2|Erkki Esimerkki|01:01:2000|suomalainen|23|Puolustaja|180.0|80.0", pelaaja.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone349 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone349() throws CloneNotSupportedException {    // Pelaaja: 349
    Pelaaja pelaaja = new Pelaaja(); 
    pelaaja.parse("   1   |  2  |   Erkki Esimerkki  | 01:01:2000 | suomalainen | 23 | Puolustaja | 180.0 | 80.0 "); 
    Pelaaja kopio = pelaaja.clone(); 
    assertEquals("From: Pelaaja line: 354", pelaaja.toString(), kopio.toString()); 
    pelaaja.parse("   2   |  2  |   Pertti Esimerkki  | 01:01:2000 | suomalainen | 23 | Puolustaja | 180.0 | 80.0 "); 
    assertEquals("From: Pelaaja line: 356", false, kopio.toString().equals(pelaaja.toString())); 
  } // Generated by ComTest END
}